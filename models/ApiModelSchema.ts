/* tslint:disable */
/* eslint-disable */
/**
 * SWAIN API
 * A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApiRelationshipSchema } from './ApiRelationshipSchema';
import {
    ApiRelationshipSchemaFromJSON,
    ApiRelationshipSchemaFromJSONTyped,
    ApiRelationshipSchemaToJSON,
    ApiRelationshipSchemaToJSONTyped,
} from './ApiRelationshipSchema';
import type { ApiFieldSchema } from './ApiFieldSchema';
import {
    ApiFieldSchemaFromJSON,
    ApiFieldSchemaFromJSONTyped,
    ApiFieldSchemaToJSON,
    ApiFieldSchemaToJSONTyped,
} from './ApiFieldSchema';

/**
 * Schema information for a model including fields and relationships
 * @export
 * @interface ApiModelSchema
 */
export interface ApiModelSchema {
    /**
     * Fields contains information about each field in the model
     * @type {Array<ApiFieldSchema>}
     * @memberof ApiModelSchema
     */
    fields?: Array<ApiFieldSchema>;
    /**
     * Relationships contains information about model relationships
     * @type {Array<ApiRelationshipSchema>}
     * @memberof ApiModelSchema
     */
    relationships?: Array<ApiRelationshipSchema>;
}

/**
 * Check if a given object implements the ApiModelSchema interface.
 */
export function instanceOfApiModelSchema(value: object): value is ApiModelSchema {
    return true;
}

export function ApiModelSchemaFromJSON(json: any): ApiModelSchema {
    return ApiModelSchemaFromJSONTyped(json, false);
}

export function ApiModelSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiModelSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'fields': json['fields'] == null ? undefined : ((json['fields'] as Array<any>).map(ApiFieldSchemaFromJSON)),
        'relationships': json['relationships'] == null ? undefined : ((json['relationships'] as Array<any>).map(ApiRelationshipSchemaFromJSON)),
    };
}

export function ApiModelSchemaToJSON(json: any): ApiModelSchema {
    return ApiModelSchemaToJSONTyped(json, false);
}

export function ApiModelSchemaToJSONTyped(value?: ApiModelSchema | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fields': value['fields'] == null ? undefined : ((value['fields'] as Array<any>).map(ApiFieldSchemaToJSON)),
        'relationships': value['relationships'] == null ? undefined : ((value['relationships'] as Array<any>).map(ApiRelationshipSchemaToJSON)),
    };
}

