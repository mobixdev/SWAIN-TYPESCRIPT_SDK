/* tslint:disable */
/* eslint-disable */
/**
 * SWAIN API
 * A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Response containing a map of all registered models and their table names
 * @export
 * @interface ApiModelsResponse
 */
export interface ApiModelsResponse {
    /**
     * Models is a map of model names to their corresponding table names
     * example: {"User": "users", "Post": "posts"}
     * @type {{ [key: string]: string; }}
     * @memberof ApiModelsResponse
     */
    models?: { [key: string]: string; };
}

/**
 * Check if a given object implements the ApiModelsResponse interface.
 */
export function instanceOfApiModelsResponse(value: object): value is ApiModelsResponse {
    return true;
}

export function ApiModelsResponseFromJSON(json: any): ApiModelsResponse {
    return ApiModelsResponseFromJSONTyped(json, false);
}

export function ApiModelsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiModelsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'models': json['models'] == null ? undefined : json['models'],
    };
}

export function ApiModelsResponseToJSON(json: any): ApiModelsResponse {
    return ApiModelsResponseToJSONTyped(json, false);
}

export function ApiModelsResponseToJSONTyped(value?: ApiModelsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'models': value['models'],
    };
}

