/* tslint:disable */
/* eslint-disable */
/**
 * SWAIN API
 * A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiUpdateFilterPayload
 */
export interface ApiUpdateFilterPayload {
    /**
     * 
     * @type {Array<object>}
     * @memberof ApiUpdateFilterPayload
     */
    expressions?: Array<object>;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ApiUpdateFilterPayload
     */
    updateData?: { [key: string]: any; };
}

/**
 * Check if a given object implements the ApiUpdateFilterPayload interface.
 */
export function instanceOfApiUpdateFilterPayload(value: object): value is ApiUpdateFilterPayload {
    return true;
}

export function ApiUpdateFilterPayloadFromJSON(json: any): ApiUpdateFilterPayload {
    return ApiUpdateFilterPayloadFromJSONTyped(json, false);
}

export function ApiUpdateFilterPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiUpdateFilterPayload {
    if (json == null) {
        return json;
    }
    return {
        
        'expressions': json['expressions'] == null ? undefined : json['expressions'],
        'updateData': json['updateData'] == null ? undefined : json['updateData'],
    };
}

export function ApiUpdateFilterPayloadToJSON(json: any): ApiUpdateFilterPayload {
    return ApiUpdateFilterPayloadToJSONTyped(json, false);
}

export function ApiUpdateFilterPayloadToJSONTyped(value?: ApiUpdateFilterPayload | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'expressions': value['expressions'],
        'updateData': value['updateData'],
    };
}

