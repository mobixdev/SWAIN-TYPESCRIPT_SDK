"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SWAIN API
 * A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfQueryFilterResponse = instanceOfQueryFilterResponse;
exports.QueryFilterResponseFromJSON = QueryFilterResponseFromJSON;
exports.QueryFilterResponseFromJSONTyped = QueryFilterResponseFromJSONTyped;
exports.QueryFilterResponseToJSON = QueryFilterResponseToJSON;
exports.QueryFilterResponseToJSONTyped = QueryFilterResponseToJSONTyped;
/**
 * Check if a given object implements the QueryFilterResponse interface.
 */
function instanceOfQueryFilterResponse(value) {
    return true;
}
function QueryFilterResponseFromJSON(json) {
    return QueryFilterResponseFromJSONTyped(json, false);
}
function QueryFilterResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'data': json['data'] == null ? undefined : json['data'],
        'page': json['page'] == null ? undefined : json['page'],
        'pageSize': json['page_size'] == null ? undefined : json['page_size'],
        'total': json['total'] == null ? undefined : json['total'],
        'totalPages': json['total_pages'] == null ? undefined : json['total_pages'],
    };
}
function QueryFilterResponseToJSON(json) {
    return QueryFilterResponseToJSONTyped(json, false);
}
function QueryFilterResponseToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'data': value['data'],
        'page': value['page'],
        'page_size': value['pageSize'],
        'total': value['total'],
        'total_pages': value['totalPages'],
    };
}
