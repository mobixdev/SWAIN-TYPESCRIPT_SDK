"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SWAIN API
 * A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfQueryAggregateFunctionSpec = instanceOfQueryAggregateFunctionSpec;
exports.QueryAggregateFunctionSpecFromJSON = QueryAggregateFunctionSpecFromJSON;
exports.QueryAggregateFunctionSpecFromJSONTyped = QueryAggregateFunctionSpecFromJSONTyped;
exports.QueryAggregateFunctionSpecToJSON = QueryAggregateFunctionSpecToJSON;
exports.QueryAggregateFunctionSpecToJSONTyped = QueryAggregateFunctionSpecToJSONTyped;
/**
 * Check if a given object implements the QueryAggregateFunctionSpec interface.
 */
function instanceOfQueryAggregateFunctionSpec(value) {
    return true;
}
function QueryAggregateFunctionSpecFromJSON(json) {
    return QueryAggregateFunctionSpecFromJSONTyped(json, false);
}
function QueryAggregateFunctionSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'alias': json['alias'] == null ? undefined : json['alias'],
        'field': json['field'] == null ? undefined : json['field'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}
function QueryAggregateFunctionSpecToJSON(json) {
    return QueryAggregateFunctionSpecToJSONTyped(json, false);
}
function QueryAggregateFunctionSpecToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'alias': value['alias'],
        'field': value['field'],
        'type': value['type'],
    };
}
