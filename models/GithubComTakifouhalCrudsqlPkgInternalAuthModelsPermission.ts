/* tslint:disable */
/* eslint-disable */
/**
 * SWAIN API
 * A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole } from './GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole';
import {
    GithubComTakifouhalCrudsqlPkgInternalAuthModelsRoleFromJSON,
    GithubComTakifouhalCrudsqlPkgInternalAuthModelsRoleFromJSONTyped,
    GithubComTakifouhalCrudsqlPkgInternalAuthModelsRoleToJSON,
    GithubComTakifouhalCrudsqlPkgInternalAuthModelsRoleToJSONTyped,
} from './GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole';

/**
 * 
 * @export
 * @interface GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
 */
export interface GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission {
    /**
     * Comma-separated actions: "read,create,update,delete", "*"
     * @type {string}
     * @memberof GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
     */
    allowedActions?: string;
    /**
     * 
     * @type {string}
     * @memberof GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
     */
    description?: string;
    /**
     * e.g., "users", "orders", "*"
     * @type {string}
     * @memberof GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
     */
    entityName?: string;
    /**
     * 
     * @type {number}
     * @memberof GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
     */
    id?: number;
    /**
     * 
     * @type {Array<GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole>}
     * @memberof GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
     */
    roles?: Array<GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole>;
    /**
     * 
     * @type {Array<number>}
     * @memberof GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
     */
    scopeExpression?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
     */
    updatedAt?: string;
}

/**
 * Check if a given object implements the GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission interface.
 */
export function instanceOfGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission(value: object): value is GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission {
    return true;
}

export function GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionFromJSON(json: any): GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission {
    return GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionFromJSONTyped(json, false);
}

export function GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission {
    if (json == null) {
        return json;
    }
    return {
        
        'allowedActions': json['allowed_actions'] == null ? undefined : json['allowed_actions'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'description': json['description'] == null ? undefined : json['description'],
        'entityName': json['entity_name'] == null ? undefined : json['entity_name'],
        'id': json['id'] == null ? undefined : json['id'],
        'roles': json['roles'] == null ? undefined : ((json['roles'] as Array<any>).map(GithubComTakifouhalCrudsqlPkgInternalAuthModelsRoleFromJSON)),
        'scopeExpression': json['scope_expression'] == null ? undefined : json['scope_expression'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionToJSON(json: any): GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission {
    return GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionToJSONTyped(json, false);
}

export function GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionToJSONTyped(value?: GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowed_actions': value['allowedActions'],
        'created_at': value['createdAt'],
        'description': value['description'],
        'entity_name': value['entityName'],
        'id': value['id'],
        'roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(GithubComTakifouhalCrudsqlPkgInternalAuthModelsRoleToJSON)),
        'scope_expression': value['scopeExpression'],
        'updated_at': value['updatedAt'],
    };
}

