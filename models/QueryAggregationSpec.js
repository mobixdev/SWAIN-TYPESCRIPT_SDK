"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SWAIN API
 * A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfQueryAggregationSpec = instanceOfQueryAggregationSpec;
exports.QueryAggregationSpecFromJSON = QueryAggregationSpecFromJSON;
exports.QueryAggregationSpecFromJSONTyped = QueryAggregationSpecFromJSONTyped;
exports.QueryAggregationSpecToJSON = QueryAggregationSpecToJSON;
exports.QueryAggregationSpecToJSONTyped = QueryAggregationSpecToJSONTyped;
var QueryAggregateFunctionSpec_1 = require("./QueryAggregateFunctionSpec");
/**
 * Check if a given object implements the QueryAggregationSpec interface.
 */
function instanceOfQueryAggregationSpec(value) {
    return true;
}
function QueryAggregationSpecFromJSON(json) {
    return QueryAggregationSpecFromJSONTyped(json, false);
}
function QueryAggregationSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'expressions': json['expressions'] == null ? undefined : json['expressions'],
        'functions': json['functions'] == null ? undefined : (json['functions'].map(QueryAggregateFunctionSpec_1.QueryAggregateFunctionSpecFromJSON)),
        'groupBy': json['group_by'] == null ? undefined : json['group_by'],
    };
}
function QueryAggregationSpecToJSON(json) {
    return QueryAggregationSpecToJSONTyped(json, false);
}
function QueryAggregationSpecToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'expressions': value['expressions'],
        'functions': value['functions'] == null ? undefined : (value['functions'].map(QueryAggregateFunctionSpec_1.QueryAggregateFunctionSpecToJSON)),
        'group_by': value['groupBy'],
    };
}
