"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SWAIN API
 * A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission = instanceOfGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission;
exports.GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionFromJSON = GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionFromJSON;
exports.GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionFromJSONTyped = GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionFromJSONTyped;
exports.GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionToJSON = GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionToJSON;
exports.GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionToJSONTyped = GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionToJSONTyped;
var GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole_1 = require("./GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole");
/**
 * Check if a given object implements the GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission interface.
 */
function instanceOfGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission(value) {
    return true;
}
function GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionFromJSON(json) {
    return GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionFromJSONTyped(json, false);
}
function GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'allowedActions': json['allowed_actions'] == null ? undefined : json['allowed_actions'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'description': json['description'] == null ? undefined : json['description'],
        'entityName': json['entity_name'] == null ? undefined : json['entity_name'],
        'id': json['id'] == null ? undefined : json['id'],
        'roles': json['roles'] == null ? undefined : (json['roles'].map(GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole_1.GithubComTakifouhalCrudsqlPkgInternalAuthModelsRoleFromJSON)),
        'scopeExpression': json['scope_expression'] == null ? undefined : json['scope_expression'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}
function GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionToJSON(json) {
    return GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionToJSONTyped(json, false);
}
function GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'allowed_actions': value['allowedActions'],
        'created_at': value['createdAt'],
        'description': value['description'],
        'entity_name': value['entityName'],
        'id': value['id'],
        'roles': value['roles'] == null ? undefined : (value['roles'].map(GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole_1.GithubComTakifouhalCrudsqlPkgInternalAuthModelsRoleToJSON)),
        'scope_expression': value['scopeExpression'],
        'updated_at': value['updatedAt'],
    };
}
